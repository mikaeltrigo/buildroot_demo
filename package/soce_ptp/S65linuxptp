#!/bin/sh
#
# Start linuxptp
#
# start-stop-daemon -S -b -q -p /var/run/linuxptp-ptp4l.pid  -x /usr/sbin/ptp4l -- -p /dev/ptp0 -f /etc/linuxptp.cfg
#/usr/sbin/ptp4l -f /etc/linuxptp.cfg
start() {
	printf "Starting linuxptp daemon: "
	#echo 8 > /proc/sys/kernel/printk
	#printf "echo 8 > /proc/sys/kernel/printk DONE "
	
	start-stop-daemon -S -b -q -p /var/run/linuxptp-ptp4l.pid \
		-x /usr/sbin/ptp4l -- -p /dev/ptp0 -f /etc/linuxptp.cfg
	#will use the system time at startup	
	phc_ctl /dev/ptp0 set 
	#other possibility
	#/usr/sbin/phc2sys -a -r -r -l 5 -F 0.001 -S 0.001 
	#start-stop-daemon -S -b -q -p /var/run/linuxptp-ptp4l.pid \
	#	-x /usr/sbin/ptp4l -- -p /dev/ptp0 -f /etc/soce_service/ptp4l.conf
		
		
	#[ $? = 0 ] && echo "OK" || echo "FAIL"

	#printf "Starting linuxptp system clock synchronization: "
	#start-stop-daemon -S -b -q -p /var/run/linuxptp-phc2sys.pid \
	#	-x /usr/sbin/phc2sys -- -s eth0 -c CLOCK_REALTIME -w -S 1.0
	#[ $? = 0 ] && echo "OK" || echo "FAIL"
}

stop() {
	printf "Stopping linuxptp system clock synchronization: "
	start-stop-daemon -K -q -p /var/run/linuxptp-phc2sys.pid \
		-x /usr/sbin/phc2sys
	echo "OK"

	printf "Stopping linuxptp daemon: "
	start-stop-daemon -K -q -p /var/run/linuxptp-ptp4l.pid \
		-x /usr/sbin/ptp4l
	echo "OK"
}

case "$1" in
  start)
	start
	;;
  stop)
	stop
	;;
  restart|reload)
	stop
	start
	;;
  *)
	echo "Usage: $0 {start|stop|restart}"
	exit 1
esac

exit $?

